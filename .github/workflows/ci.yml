name: CI

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/UrbanHerb

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/UrbanHerb/yarn.lock

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run ESLint
      run: yarn lint

    - name: Check TypeScript
      run: yarn tsc --noEmit

    - name: Run Prettier check
      run: yarn prettier --check .

    - name: Run tests with coverage
      run: yarn test --coverage --passWithNoTests

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage

  build-ios:
    name: Build iOS
    needs: lint-and-test
    runs-on: macos-latest
    defaults:
      run:
        working-directory: frontend/UrbanHerb

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/UrbanHerb/yarn.lock

    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: frontend/UrbanHerb/ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install dependencies
      run: |
        yarn install --frozen-lockfile
        cd ios && pod install

    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace UrbanHerb.xcworkspace \
          -scheme UrbanHerb \
          -configuration Debug \
          -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          clean build | xcpretty

  build-android:
    name: Build Android
    needs: lint-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/UrbanHerb

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/UrbanHerb/yarn.lock

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build Android
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon